package org.k1s.epkn.cpnimport;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;

import nppnnets.impl.NppnnetsFactoryImpl;

import org.cpntools.accesscpn.model.importer.DOMParser;
import org.cpntools.accesscpn.model.importer.NetCheckException;
import org.pnml.tools.epnk.pnmlcoremodel.Name;
import org.pnml.tools.epnk.pnmlcoremodel.impl.PnmlcoremodelFactoryImpl;
import org.pnml.tools.epnk.pnmlcoremodel.serialisation.PNMLFactory;
import org.pnml.tools.epnk.pntypes.hlpng.pntd.hlpngdefinition.Page;
import org.pnml.tools.epnk.pntypes.hlpng.pntd.hlpngdefinition.impl.HlpngdefinitionFactoryImpl;
import org.xml.sax.SAXException;


public class CPNTranslator {

	
	public List<Page> translate(String cpn){
		List<Page>  pages = new ArrayList<Page>();
		FileInputStream fis = null;
		org.cpntools.accesscpn.model.PetriNet pn;
		try {
			fis = new FileInputStream(new File(cpn));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			pn = DOMParser.parse(fis, "");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		for(org.cpntools.accesscpn.model.Page cpnPage : pn.getPage()){
			Page page = HlpngdefinitionFactoryImpl.eINSTANCE.createPage();
			Name name = new PnmlcoremodelFactoryImpl().createName();
			name.setText(cpnPage.getName().getText());
			page.setName(name);
		}
		
		return pages;
	}
	
	
/*	public String getAsString(String cpnFile){
		File file = new File(cpnFile);
		byte[] b = new byte[(int) file.length()];
		FileInputStream fis;
		try {
			fis = new FileInputStream(file);
			  
		    fis.read(b);  
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException ioe){
			ioe.printStackTrace();
		}
	    return new String(b);
	}*/
}
