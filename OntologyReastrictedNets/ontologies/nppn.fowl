 Prefix(:=<http://org.k1s/orn/nppn/>)
 Prefix(basic:=<http://t.k1s.org/OntologyReastrictedNets/basic/>)
 Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
 Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
 Prefix(cpn:=<http://hib.no/SADLTest/cpn>)

 Ontology(<http://org.k1s/orn/nppn/>
  Import( <http://t.k1s.org/OntologyReastrictedNets/basic.owl> )
  Import( <http://t.k1s.org/OntologyReastrictedNets/cpn.owl> )

   

  SubClassOf( :Principal basic:Pragmatic )
  SubClassOf( :Principal ObjectAllValuesFrom( :belongsTo cpn:Page ) )
  

  SubClassOf( :Channel basic:Pragmatic )
  SubClassOf( :Channel ObjectAllValuesFrom( :belongsTo cpn:Place )  )
  
  SubClassOf( :Id basic:Pragmatic )
  SubClassOf( :Id ObjectAllValuesFrom( :belongsTo cpn:Place ) ) 

  SubClassOf( :External basic:Pragmatic )
  SubClassOf( :External ObjectAllValuesFrom( :belongsTo :TransitionConnectedToId ) ) 

  
  SubClassOf( :Send basic:Pragmatic )
  SubClassOf( :Send ObjectAllValuesFrom( :belongsTo cpn:Transition ) )
  SubClassOf( :Send  basic:Implicit)
  Declaration( NamedIndividual( :SendImplicitPattern ) )
  DataPropertyAssertion( :pttrn :SendImplicitPattern "new PNPattern(adjacentPatterns: [new PNPattern(adjacentPatterns: [new PNPattern(pragmatics:[\"Channel\"], backlink: true)])])" )
  
   
  SubClassOf( :Recieve basic:Pragmatic )
  SubClassOf( :Recieve ObjectAllValuesFrom( :belongsTo cpn:Transition ) )
  
   SubClassOf( :Partition basic:Pragmatic )
  SubClassOf( :Partition ObjectAllValuesFrom( :belongsTo cpn:Transition ) )

  
  SubClassOf( :OpenChannel basic:Pragmatic )
  SubClassOf( :OpenChannel ObjectAllValuesFrom( :belongsTo cpn:Transition ) )
  SubClassOf( :OpenChannel  basic:Implicit)
  
  

  
  
  Declaration( NamedIndividual( :OpenChannelImplicitPattern ) )
  DataPropertyAssertion( :pttrn :OpenChannelImplicitPattern "new PNPattern(outArcInscription: 'CreateEndpointName')" )




  SubClassOf( :Loop basic:Pragmatic )
  SubClassOf( :Loop ObjectAllValuesFrom( :belongsTo cpn:Place ) )
  SubClassOf( :Loop  basic:Implicit)
  Declaration( NamedIndividual( :LoopImplicitPattern ) )
  DataPropertyAssertion( :pttrn :LoopImplicitPattern "new PNPattern(pragmatics: [\"Id\"], minInEdges: 2)" )
  
  
  SubClassOf( :EndLop basic:Pragmatic )
  SubClassOf( :EndLop ObjectAllValuesFrom( :belongsTo cpn:Place ) )
  SubClassOf( :EndLop  basic:Implicit)
  Declaration( NamedIndividual( :EndLopImplicitPattern ) )
  DataPropertyAssertion( :pttrn :EndLopImplicitPattern "new PNPattern(adjacentPatterns: null, pragmatics: [\"Id\"], minOutEdges: 2)" )
  DataPropertyAssertion( :setCond :EndLopImplicitPattern "true" )
  
  DisjointClasses(:Loop :EndLop)
  
  SubClassOf( :CloseChannel basic:Pragmatic )
  SubClassOf( :CloseChannel ObjectAllValuesFrom( :belongsTo cpn:Transition ) )
  


  DisjointClasses(cpn:Place cpn:Transition cpn:Arc cpn:Page basic:Pragmatic)
  DisjointClasses(cpn:Place cpn:Transition cpn:Arc cpn:Page :Id :External )
  

  SubClassOf( :IdPlace ObjectAllValuesFrom( :hasPragmatic :Id))

  SubClassOf( :IdPlace ObjectIntersectionOf(
      cpn:Place
          ObjectAllValuesFrom( :hasPragmatic :Id)
          ObjectExactCardinality( 1 :hasPragmatic )
    )
  )
  
  SubClassOf( :ArcFromId ObjectIntersectionOf(
                cpn:Arc
                ObjectAllValuesFrom( cpn:source :IdPlace) 
                ObjectExactCardinality( 1 cpn:source :IdPlace)
        )
  )

  SubClassOf( :TransitionConnectedToId ObjectIntersectionOf(
                cpn:Transition
                ObjectAllValuesFrom( :in :ArcFromId) 
     )
  )
)